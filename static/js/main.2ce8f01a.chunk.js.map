{"version":3,"sources":["pages/ProfilePage/profile.module.css","general/navbar/navbar.module.css","pages/Album.js","pages/AuthPage.js","pages/Menu.js","redux/actions.js","redux/types.js","components/Alert.js","components/Profile/InputFirstName.jsx","components/Profile/InputSecondName.jsx","general/downloadImg/InputDownloadImg.jsx","general/downloadImg/successDownloadImgHandler.js","components/Profile/InputAge.jsx","pages/Settings.js","components/time.js","components/PostForm/InputTitle.jsx","components/PostForm/InputMessage.jsx","components/PostForm/PostForm.js","components/Post.js","components/Posts.js","pages/PostMen.js","pages/ProfilePage/Profile.js","general/navbar/NavBar.js","App.js","routes.js","serviceWorker.js","redux/reducers/postsReducer.js","redux/reducers/appReducer.js","redux/reducers/profileReducer.js","redux/reducers/rootReducer.js","redux/middleware.js","redux/sagas.js","index.js"],"names":["module","exports","Album","className","AuthPage","placeholder","id","type","name","htmlFor","style","marginRight","Menu","showAlert","text","dispatch","payload","setTimeout","Alert","role","props","value","onChange","title","successSelectFile","aria-describedby","successDownloadImgHandler","e","callback","persist","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","a","target","files","Main","then","fileImg","catch","console","log","Settings","submitHandler","preventDefault","state","firstName","secondName","age","trim","newDataUser","upgradeProfile","setState","changeInputHandler","prev","functionDownloadImg","res","propsProfileData","this","profileData","length","onSubmit","alert","InputFirstName","InputSecondName","InputAge","InputDownloadImg","to","src","alt","React","Component","mapDispatchToProps","connect","app","profile","timer","now","Date","month","getMonth","getDate","getHours","getMinutes","PostForm","messagePost","newPost","time","toString","createPost","InputTitle","InputMessage","post","maxWidth","href","syncPosts","posts","map","Post","key","PostMen","s","ava","nameIcon","ageIcon","NavBar","padding","activeClassName","activeLink","App","routes","isAuthenticated","path","exact","useRoutes","Boolean","window","location","hostname","match","initialState","fetchedPosts","loading","rootReducer","combineReducers","action","concat","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPosts","fetch","response","json","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","next","filter","w","includes","__REDUX_DEVTOOLS_EXTENSION__","run","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2ce8f01a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"profile_ava__1LRfQ\",\"name\":\"profile_name__y7SOb\",\"age\":\"profile_age__1zx3Q\",\"nameIcon\":\"profile_nameIcon__DGqZJ\",\"ageIcon\":\"profile_ageIcon__3p_Bu\",\"posts\":\"profile_posts__37ntr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"navbar_activeLink__2FfmY\"};","import React from \"react\";\r\n\r\nfunction Album() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>It`s Album</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Album;\r\n","import React from \"react\";\r\n\r\nfunction AuthPage() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>PostMen</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите пароль\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                />\r\n                                <label htmlFor=\"password\">Пароль</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className=\"btn yellow darken-4\"\r\n                            style={{ marginRight: 10 }}\r\n                        >\r\n                            Войти\r\n                        </button>\r\n                        <button className=\"btn grey lighten-1 black-text\">\r\n                            Регистрация\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>It`s Menu</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import {\r\n    CREATE_POST,\r\n    UPGRADE_PROFILE,\r\n    SHOW_LOADER,\r\n    HIDE_LOADER,\r\n    SHOW_ALERT,\r\n    HIDE_ALERT,\r\n    REQUEST_POSTS,\r\n} from \"./types\";\r\n\r\nexport function createPost(post) {\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: post,\r\n    };\r\n}\r\n\r\nexport function upgradeProfile(profileData) {\r\n    return {\r\n        type: UPGRADE_PROFILE,\r\n        payload: profileData,\r\n    };\r\n}\r\n\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOADER,\r\n    };\r\n}\r\n\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER,\r\n    };\r\n}\r\n\r\nexport function showAlert(text) {\r\n    return (dispatch) => {\r\n        dispatch({ type: SHOW_ALERT, payload: text });\r\n\r\n        setTimeout(() => {\r\n            dispatch(hideAlert());\r\n        }, 3000);\r\n    };\r\n}\r\n\r\nexport function hideAlert() {\r\n    return {\r\n        type: HIDE_ALERT,\r\n    };\r\n}\r\n\r\nexport function fetchPosts() {\r\n    return {\r\n        type: REQUEST_POSTS,\r\n    };\r\n}\r\n","export const CREATE_POST = \"POST/CREATE_POST\";\r\nexport const FETCH_POSTS = \"POST/FETCH_POSTS\";\r\nexport const REQUEST_POSTS = \"POST/REQUEST_POSTS\";\r\nexport const SHOW_LOADER = \"APP/SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"APP/HIDE_LOADER\";\r\nexport const SHOW_ALERT = \"APP/SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"APP/HIDE_ALERT\";\r\nexport const UPGRADE_PROFILE = \"PROFILE/UPGRADE_PROFILE\";\r\n","import React from \"react\";\r\n\r\nexport const Alert = ({ text }) => (\r\n    <div className=\"alert alert-warning\" role=\"alert\">\r\n        {text}\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"form-group pb-1\">\r\n            <label htmlFor=\"title\">Имя</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"firstName\"\r\n                value={props.value}\r\n                name=\"firstName\"\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"form-group pb-1\">\r\n            <label htmlFor=\"title\">Фамилия</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"secondName\"\r\n                value={props.value}\r\n                name=\"secondName\"\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"../../components/PostForm/PostForm.css\";\r\n\r\nexport default ({ title, onChange, successSelectFile }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"messagePost\">{title}</label>\r\n\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"custom-file\">\r\n                        <input\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            id=\"inputGroupFile01\"\r\n                            aria-describedby=\"inputGroupFileAddon01\"\r\n                            onChange={onChange}\r\n                        />\r\n                        <label\r\n                            className=\"custom-file-label\"\r\n                            htmlFor=\"inputGroupFile01\"\r\n                        >\r\n                            {successSelectFile\r\n                                ? successSelectFile\r\n                                : \"Выберите файл\"}\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export const successDownloadImgHandler = (e, callback) => {\r\n    e.persist();\r\n\r\n    const toBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n\r\n    async function Main() {\r\n        const file = e.target.files[0];\r\n        return await toBase64(file);\r\n    }\r\n\r\n    Main()\r\n        .then((result) => {\r\n            callback({\r\n                successSelectFile: e.target.files[0].name,\r\n                fileImg: result,\r\n            });\r\n        })\r\n        .catch(console.log);\r\n};\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className=\"form-group pb-1\">\r\n            <label htmlFor=\"title\">Возраст</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"age\"\r\n                value={props.value}\r\n                name=\"age\"\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { upgradeProfile, showAlert } from \"../redux/actions\";\r\nimport { Alert } from \"../components/Alert\";\r\nimport InputFirstName from \"../components/Profile/InputFirstName\";\r\nimport InputSecondName from \"../components/Profile/InputSecondName\";\r\nimport InputDownloadImg from \"../general/downloadImg/InputDownloadImg\";\r\nimport { successDownloadImgHandler } from \"../general/downloadImg/successDownloadImgHandler\";\r\nimport InputAge from \"../components/Profile/InputAge\";\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: \"\",\r\n            secondName: \"\",\r\n            age: \"\",\r\n            successSelectFile: \"\",\r\n            fileImg: \"\",\r\n        };\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {\r\n            firstName,\r\n            secondName,\r\n            age,\r\n            successSelectFile,\r\n            fileImg,\r\n        } = this.state;\r\n\r\n        if (\r\n            !firstName.trim() ||\r\n            !secondName.trim() ||\r\n            !successSelectFile.trim() ||\r\n            !age.trim()\r\n        ) {\r\n            return this.props.showAlert(\"Все поля должны быть заполнены\");\r\n        }\r\n\r\n        const newDataUser = {\r\n            firstName,\r\n            secondName,\r\n            age,\r\n            successSelectFile,\r\n            fileImg,\r\n        };\r\n\r\n        this.props.upgradeProfile(newDataUser);\r\n        this.setState({\r\n            firstName: \"\",\r\n            secondName: \"\",\r\n            age: \"\",\r\n            successSelectFile: \"\",\r\n        });\r\n    };\r\n\r\n    changeInputHandler = (e) => {\r\n        e.persist();\r\n\r\n        this.setState((prev) => ({\r\n            ...prev,\r\n            ...{ [e.target.name]: e.target.value },\r\n        }));\r\n    };\r\n\r\n    functionDownloadImg = (e) => {\r\n        successDownloadImgHandler(e, (res) =>\r\n            this.setState((prev) => ({\r\n                ...prev,\r\n                ...res,\r\n            }))\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let firstName, secondName, age, fileImg;\r\n        let propsProfileData = this.props.profileData;\r\n\r\n        if (propsProfileData.length > 0) {\r\n            firstName = propsProfileData[0].firstName;\r\n            secondName = propsProfileData[0].secondName;\r\n            age = propsProfileData[0].age;\r\n            fileImg = propsProfileData[0].fileImg;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container pt-4\">\r\n                <form onSubmit={this.submitHandler} className=\"pb-5\">\r\n                    {this.props.alert && <Alert text={this.props.alert} />}\r\n\r\n                    <InputFirstName\r\n                        value={this.state.firstName}\r\n                        onChange={this.changeInputHandler}\r\n                    />\r\n\r\n                    <InputSecondName\r\n                        value={this.state.secondName}\r\n                        onChange={this.changeInputHandler}\r\n                    />\r\n\r\n                    <InputAge\r\n                        value={this.state.age}\r\n                        onChange={this.changeInputHandler}\r\n                    />\r\n\r\n                    <InputDownloadImg\r\n                        title=\"Аватарка\"\r\n                        onChange={this.functionDownloadImg}\r\n                        successSelectFile={this.state.successSelectFile}\r\n                    />\r\n\r\n                    <button className=\"btn btn-warning\" type=\"submit\">\r\n                        Обновить\r\n                    </button>\r\n                </form>\r\n\r\n                {firstName && secondName && age && fileImg && (\r\n                    <div className=\"jumbotron jumbotron-fluid pt-3\">\r\n                        <div className=\"container\">\r\n                            <NavLink to=\"/profile\">Перейти в профиль</NavLink>\r\n\r\n                            <h1 className=\"display-4\">Твои данные</h1>\r\n                            <p className=\"lead\">\r\n                                {firstName} {secondName}, {age} лет\r\n                            </p>\r\n                            <img\r\n                                src={fileImg}\r\n                                className=\"card-img-top\"\r\n                                alt=\"аватарка\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    upgradeProfile,\r\n    showAlert,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alert: state.app.alert,\r\n    profileData: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","export function timer() {\r\n    const now = new Date();\r\n\r\n    const month = now.getMonth() + 1;\r\n    const day = now.getDate();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n\r\n    return day + \".0\" + month + \" \" + hours + \":\" + minutes;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default ({ value, onChange }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Заголовок</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"title\"\r\n                    value={value}\r\n                    name=\"title\"\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ value, onChange }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"messagePost\">Текст</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"messagePost\"\r\n                    value={value}\r\n                    name=\"messagePost\"\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost, showAlert } from \"../../redux/actions\";\r\nimport { Alert } from \"../Alert\";\r\nimport { timer } from \"../time\";\r\nimport InputTitle from \"./InputTitle\";\r\nimport InputMessage from \"./InputMessage\";\r\nimport InputDownloadImg from \"../../general/downloadImg/InputDownloadImg\";\r\nimport { successDownloadImgHandler } from \"../../general/downloadImg/successDownloadImgHandler\";\r\n// import \"./PostForm.css\";\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            messagePost: \"\",\r\n            successSelectFile: \"\",\r\n            fileImg: \"\",\r\n        };\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { title, messagePost, successSelectFile, fileImg } = this.state;\r\n\r\n        if (!title.trim() || !messagePost.trim() || !successSelectFile.trim()) {\r\n            return this.props.showAlert(\"Все поля должны быть заполнены\");\r\n        }\r\n\r\n        const newPost = {\r\n            title,\r\n            messagePost,\r\n            time: timer(),\r\n            successSelectFile,\r\n            fileImg,\r\n            id: Date.now().toString(),\r\n        };\r\n\r\n        this.props.createPost(newPost);\r\n        this.setState({ title: \"\", messagePost: \"\", successSelectFile: \"\" });\r\n    };\r\n\r\n    changeInputHandler = (e) => {\r\n        e.persist();\r\n        this.setState((prev) => ({\r\n            ...prev,\r\n            ...{ [e.target.name]: e.target.value },\r\n        }));\r\n    };\r\n\r\n    functionDownloadImg = (e) => {\r\n        successDownloadImgHandler(e, (res) =>\r\n            this.setState((prev) => ({\r\n                ...prev,\r\n                ...res,\r\n            }))\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.submitHandler}>\r\n                {this.props.alert && <Alert text={this.props.alert} />}\r\n\r\n                <InputTitle\r\n                    value={this.state.title}\r\n                    onChange={this.changeInputHandler}\r\n                />\r\n\r\n                <InputMessage\r\n                    value={this.state.messagePost}\r\n                    onChange={this.changeInputHandler}\r\n                />\r\n\r\n                <InputDownloadImg\r\n                    title=\"Картинка\"\r\n                    onChange={this.functionDownloadImg}\r\n                    successSelectFile={this.state.successSelectFile}\r\n                />\r\n\r\n                <button className=\"btn btn-success\" type=\"submit\">\r\n                    Создать\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createPost,\r\n    showAlert,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alert: state.app.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React from \"react\";\r\n\r\nexport default ({ post }) => {\r\n    debugger;\r\n    return (\r\n        <div className=\"card\" style={{ maxWidth: 18 + \"rem\" }} className=\"pt-3\">\r\n            {post.fileImg && (\r\n                <img\r\n                    src={post.fileImg}\r\n                    className=\"card-img-top\"\r\n                    alt=\"картинка для поста\"\r\n                />\r\n            )}\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{post.title}</h5>\r\n                <p className=\"card-text\">\r\n                    {post.messagePost}\r\n                    <footer className=\"footer pt-2\">\r\n                        <cite title=\"Source Title\">{post.time}</cite>\r\n                    </footer>\r\n                </p>\r\n                {post.messagePost && post.messagePost.length > 500 && (\r\n                    <a href=\"/#\" className=\"btn btn-primary\">\r\n                        Читать дальше\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Posts = ({ syncPosts }) => {\r\n    if (!syncPosts.length) {\r\n        return <p className=\"text-center\">Постов пока нет</p>;\r\n    }\r\n    return syncPosts.map((post) => <Post post={post} key={post.id} />);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        syncPosts: state.posts.posts,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Posts);\r\n","import React from \"react\";\r\nimport PostForm from \"../components/PostForm/PostForm\";\r\nimport Posts from \"../components/Posts\";\r\n\r\nconst PostMen = () => {\r\n    return (\r\n        <div className=\"container pt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <PostForm />\r\n                </div>\r\n            </div>\r\n            <div className=\"row pt-3\">\r\n                <div className=\"col\">\r\n                    <Posts />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostMen;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./profile.module.css\";\r\nimport \"materialize-css\";\r\nimport PostMen from \"../PostMen\";\r\n\r\nconst Profile = (props) => {\r\n    let firstName, secondName, age, fileImg;\r\n    let propsProfileData = props.profileData;\r\n\r\n    if (propsProfileData.length > 0) {\r\n        firstName = propsProfileData[0].firstName;\r\n        secondName = propsProfileData[0].secondName;\r\n        age = propsProfileData[0].age;\r\n        fileImg = propsProfileData[0].fileImg;\r\n    } else {\r\n        return (\r\n            <div className=\"container pt-5\">\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-header\">Внимание</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Профиль пуст</h5>\r\n                        <p className=\"card-text\">\r\n                            Лишь заполнив его, можно получить новые\r\n                            возможности...\r\n                        </p>\r\n\r\n                        <NavLink to=\"/settings\" className=\"btn btn-primary\">\r\n                            начать\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"card-footer text-muted\">Удачи!</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container pt-4\">\r\n            {firstName && secondName && age && fileImg && (\r\n                <>\r\n                    <img src={fileImg} className={s.ava} alt=\"аватарка\" />\r\n                    <div className={s.nameIcon}>\r\n                        <ul className=\"left hide-on-med-and-down\">\r\n                            <li>\r\n                                <i className=\"material-icons brown-text\">\r\n                                    face\r\n                                </i>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className={s.name}>\r\n                        {firstName} {secondName}\r\n                    </div>\r\n                    <div className={s.posts}>\r\n                        <PostMen />\r\n                    </div>\r\n\r\n                    <div className={s.ageIcon}>\r\n                        <ul className=\"left hide-on-med-and-down\">\r\n                            <li>\r\n                                <i className=\"material-icons brown-text\">\r\n                                    hourglass_empty\r\n                                </i>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className={s.age}>{age} лет</div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profileData: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Profile);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./navbar.module.css\";\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <nav>\r\n            <div\r\n                className=\"nav-wrapper blue darken-1\"\r\n                style={{ padding: \"0 2rem\" }}\r\n            >\r\n                <span className=\"brand-logo\">ВСети</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li>\r\n                        <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n                            Настройки\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n                            Досье\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/album\" activeClassName={s.activeLink}>\r\n                            Альбом\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/menu\" activeClassName={s.activeLink}>\r\n                            Меню\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/\">Выйти</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n","import React from \"react\";\nimport \"materialize-css\";\nimport { useRoutes } from \"./routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { NavBar } from \"./general/navbar/NavBar\";\n\nconst App = () => {\n    const routes = useRoutes(true);\n    const isAuthenticated = 1;\n    return (\n        <Router>\n            {isAuthenticated === 1 && <NavBar />}\n            <div className=\"container\">{routes}</div>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Album from \"./pages/Album\";\r\nimport AuthPage from \"./pages/AuthPage\";\r\nimport Menu from \"./pages/Menu\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Profile from \"./pages/ProfilePage/Profile\";\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/settings\" exact>\r\n                    <Settings />\r\n                </Route>\r\n                <Route path=\"/profile\" exact>\r\n                    <Profile />\r\n                </Route>\r\n                <Route path=\"/album\" exact>\r\n                    <Album />\r\n                </Route>\r\n                <Route path=\"/menu\" exact>\r\n                    <Menu />\r\n                </Route>\r\n\r\n                <Redirect to=\"/profile\" />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CREATE_POST, FETCH_POSTS } from \"../types\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    fetchedPosts: [],\r\n};\r\n\r\n//Pure Functions\r\nexport const postsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POST:\r\n            return { ...state, posts: state.posts.concat([action.payload]) };\r\n        case FETCH_POSTS:\r\n            return { ...state, fetchedPosts: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    SHOW_LOADER,\r\n    HIDE_LOADER,\r\n    SHOW_ALERT,\r\n    HIDE_ALERT,\r\n} from \"../../redux/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    alert: null,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return { ...state, loading: true };\r\n        case HIDE_LOADER:\r\n            return { ...state, loading: false };\r\n        case SHOW_ALERT:\r\n            return { ...state, alert: action.payload };\r\n        case HIDE_ALERT:\r\n            return { ...state, alert: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { UPGRADE_PROFILE } from \"../types\";\r\n\r\nconst initialState = {\r\n    profile: [],\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPGRADE_PROFILE:\r\n            return {\r\n                ...state,\r\n                // profile: state.profile.concat([action.payload]),\r\n                profile: [action.payload],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { postsReducer } from \"../reducers/postsReducer\";\r\nimport { appReducer } from \"../reducers/appReducer\";\r\nimport { profileReducer } from \"../reducers/profileReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    posts: postsReducer,\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n});\r\n","import { CREATE_POST } from \"./types\";\r\nimport { showAlert } from \"./actions\";\r\n\r\nconst forbidden = [\"fuck\", \"php\", \"lol\"];\r\n\r\nexport function forbiddenWordsMiddleware({ dispatch }) {\r\n    return function (next) {\r\n        return function (action) {\r\n            if (action.type === CREATE_POST) {\r\n                const found = forbidden.filter((w) =>\r\n                    action.payload.title.includes(w)\r\n                );\r\n                if (found.length) {\r\n                    return dispatch(showAlert(\"you is spamer\"));\r\n                }\r\n            }\r\n            return next(action);\r\n        };\r\n    };\r\n}\r\n","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { FETCH_POSTS, REQUEST_POSTS } from \"./types\";\r\nimport { showLoader, hideLoader, showAlert } from \"./actions\";\r\n\r\nexport function* sagaWatcher() {\r\n    yield takeEvery(REQUEST_POSTS, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n    try {\r\n        yield put(showLoader());\r\n        const payload = yield call(fetchPosts);\r\n        yield put({ type: FETCH_POSTS, payload });\r\n        yield put(hideLoader());\r\n    } catch (e) {\r\n        yield put(showAlert(\"Ошибка на сервере. Попробуйте ещё раз...\"));\r\n        yield put(hideLoader());\r\n    }\r\n}\r\n\r\nasync function fetchPosts() {\r\n    const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts?_limit=5\"\r\n    );\r\n    return await response.json();\r\n}\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./redux/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { forbiddenWordsMiddleware } from \"./redux/middleware\";\nimport { sagaWatcher } from \"./redux/sagas\";\nimport \"./index.css\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk, forbiddenWordsMiddleware, saga),\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nsaga.run(sagaWatcher);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nrender(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}