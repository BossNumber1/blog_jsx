{"version":3,"sources":["pages/ProfilePage/profile.module.css","pages/Settings/settings.module.css","general/navbar/navbar.module.css","components/PostForm/postform.module.css","pages/Album.js","pages/AuthPage.js","pages/Menu.js","redux/actions.js","redux/types.js","general/downloadImg/successDownloadImgHandler.js","components/Alert.js","components/Profile/InputFirstName.jsx","components/Profile/InputSecondName.jsx","general/downloadImg/InputDownloadImg.jsx","components/Profile/InputAge.jsx","components/Profile/InputCountry.jsx","pages/Settings/SettingsUI.jsx","pages/Settings/Settings.js","components/time.js","components/PostForm/InputPost.jsx","components/PostForm/PostForm.js","components/Post.js","components/Posts.js","pages/PostMen.js","pages/ProfilePage/ProfileInfo.jsx","pages/ProfilePage/Profile.js","general/navbar/NavBar.js","App.js","routes.js","serviceWorker.js","redux/reducers/postsReducer.js","redux/reducers/appReducer.js","redux/reducers/profileReducer.js","redux/reducers/rootReducer.js","redux/middleware.js","redux/sagas.js","index.js"],"names":["module","exports","Album","className","AuthPage","placeholder","id","type","name","htmlFor","style","marginRight","Menu","showAlert","text","dispatch","payload","setTimeout","successDownloadImgHandler","e","callback","persist","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","a","target","files","Main","then","successSelectFile","fileImg","catch","console","log","Alert","role","value","onChange","title","alt","alert","submitHandler","firstNameState","secondNameState","changeInputHandler","ageState","countryState","functionDownloadImg","firstName","secondName","age","country","s","wrapper","anketa","onSubmit","InputFirstName","InputSecondName","InputAge","InputCountry","InputDownloadImg","button","ava","src","to","Settings","props","preventDefault","state","trim","newDataUser","upgradeProfile","setState","prev","res","propsProfileData","this","profileData","length","SettingsUI","React","Component","mapDispatchToProps","connect","app","profile","timer","now","Date","month","getMonth","getDate","getHours","getMinutes","icon","label","PostForm","messagePost","newPost","time","toString","createPost","inputElements","map","i","InputPost","post","width","borderRadius","syncPosts","posts","Post","key","PostMen","block","infoElements","ProfileInfo","info","NavBar","padding","activeClassName","activeLink","href","App","routes","isAuthenticated","path","exact","useRoutes","Boolean","window","location","hostname","match","initialState","fetchedPosts","loading","rootReducer","combineReducers","action","concat","forbidden","sagaWatcher","sagaWorker","takeEvery","put","call","fetchPosts","fetch","response","json","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","thunk","next","filter","w","includes","__REDUX_DEVTOOLS_EXTENSION__","run","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fa915c9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"profile_ava__1LRfQ\",\"posts\":\"profile_posts__37ntr\",\"info\":\"profile_info__iaadv\",\"block\":\"profile_block__E79LC\",\"icon\":\"profile_icon__1Yzf2\",\"text\":\"profile_text__3gnMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"settings_wrapper__3HqOt\",\"anketa\":\"settings_anketa__1e79n\",\"result\":\"settings_result__1j4wQ\",\"button\":\"settings_button__2ZpEB\",\"ava\":\"settings_ava__3b1aQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"navbar_activeLink__2FfmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"postform_button__298xW\"};","import React from \"react\";\r\n\r\nfunction Album() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>It`s Album</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Album;\r\n","import React from \"react\";\r\n\r\nfunction AuthPage() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>PostMen</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите пароль\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                />\r\n                                <label htmlFor=\"password\">Пароль</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className=\"btn yellow darken-4\"\r\n                            style={{ marginRight: 10 }}\r\n                        >\r\n                            Войти\r\n                        </button>\r\n                        <button className=\"btn grey lighten-1 black-text\">\r\n                            Регистрация\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>It`s Menu</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import {\r\n    CREATE_POST,\r\n    UPGRADE_PROFILE,\r\n    SHOW_LOADER,\r\n    HIDE_LOADER,\r\n    SHOW_ALERT,\r\n    HIDE_ALERT,\r\n    REQUEST_POSTS,\r\n} from \"./types\";\r\n\r\nexport function createPost(post) {\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: post,\r\n    };\r\n}\r\n\r\nexport function upgradeProfile(profileData) {\r\n    return {\r\n        type: UPGRADE_PROFILE,\r\n        payload: profileData,\r\n    };\r\n}\r\n\r\nexport function showLoader() {\r\n    return {\r\n        type: SHOW_LOADER,\r\n    };\r\n}\r\n\r\nexport function hideLoader() {\r\n    return {\r\n        type: HIDE_LOADER,\r\n    };\r\n}\r\n\r\nexport function showAlert(text) {\r\n    return (dispatch) => {\r\n        dispatch({ type: SHOW_ALERT, payload: text });\r\n\r\n        setTimeout(() => {\r\n            dispatch(hideAlert());\r\n        }, 3000);\r\n    };\r\n}\r\n\r\nexport function hideAlert() {\r\n    return {\r\n        type: HIDE_ALERT,\r\n    };\r\n}\r\n\r\nexport function fetchPosts() {\r\n    return {\r\n        type: REQUEST_POSTS,\r\n    };\r\n}\r\n","export const CREATE_POST = \"POST/CREATE_POST\";\r\nexport const FETCH_POSTS = \"POST/FETCH_POSTS\";\r\nexport const REQUEST_POSTS = \"POST/REQUEST_POSTS\";\r\nexport const SHOW_LOADER = \"APP/SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"APP/HIDE_LOADER\";\r\nexport const SHOW_ALERT = \"APP/SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"APP/HIDE_ALERT\";\r\nexport const UPGRADE_PROFILE = \"PROFILE/UPGRADE_PROFILE\";\r\n","export const successDownloadImgHandler = (e, callback) => {\r\n    e.persist();\r\n\r\n    const toBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n\r\n    async function Main() {\r\n        const file = e.target.files[0];\r\n        return await toBase64(file);\r\n    }\r\n\r\n    Main()\r\n        .then((result) => {\r\n            callback({\r\n                successSelectFile: e.target.files[0].name,\r\n                fileImg: result,\r\n            });\r\n        })\r\n        .catch(console.log);\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Alert = ({ text }) => (\r\n    <div className=\"alert alert-warning\" role=\"alert\">\r\n        {text}\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport default ({ value, onChange }) => {\r\n    return (\r\n        <div className=\"input-field col s6\">\r\n            <i className=\"material-icons prefix\">account_circle</i>\r\n            <input\r\n                id=\"firstName\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                name=\"firstName\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <label htmlFor=\"icon_prefix\">Имя</label>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ value, onChange }) => {\r\n    return (\r\n        <div className=\"input-field col s6\">\r\n            <i className=\"material-icons prefix\">account_box</i>\r\n            <input\r\n                className=\"validate\"\r\n                id=\"secondName\"\r\n                type=\"text\"\r\n                name=\"secondName\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <label htmlFor=\"icon_telephone\">Фамилия</label>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"../../components/PostForm/PostForm.css\";\r\n\r\nexport default ({ title, onChange, successSelectFile }) => {\r\n    return (\r\n        <div className=\"file-field input-field\">\r\n            <div className=\"btn\">\r\n                <span>{title}</span>\r\n                <input\r\n                    id=\"ava\"\r\n                    alt=\"ava\"\r\n                    type=\"file\"\r\n                    onChange={onChange}\r\n                    className=\"custom-file-input\"\r\n                />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input\r\n                    className=\"file-path validate\"\r\n                    type=\"text\"\r\n                    value={successSelectFile}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ value, onChange }) => {\r\n    return (\r\n        <div className=\"input-field col s6\">\r\n            <i className=\"material-icons prefix\">cake</i>\r\n            <input\r\n                id=\"age\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                name=\"age\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <label htmlFor=\"icon_prefix\">Возраст</label>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ value, onChange }) => {\r\n    return (\r\n        <div className=\"input-field col s6\">\r\n            <i className=\"material-icons prefix\">public</i>\r\n            <input\r\n                id=\"country\"\r\n                type=\"text\"\r\n                className=\"validate\"\r\n                name=\"country\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <label htmlFor=\"icon_prefix\">Страна</label>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./settings.module.css\";\r\nimport { Alert } from \"../../components/Alert\";\r\nimport InputFirstName from \"../../components/Profile/InputFirstName\";\r\nimport InputSecondName from \"../../components/Profile/InputSecondName\";\r\nimport InputDownloadImg from \"../../general/downloadImg/InputDownloadImg\";\r\nimport InputAge from \"../../components/Profile/InputAge\";\r\nimport InputCountry from \"../../components/Profile/InputCountry\";\r\n\r\nexport default ({\r\n    alert,\r\n    submitHandler,\r\n    firstNameState,\r\n    secondNameState,\r\n    changeInputHandler,\r\n    ageState,\r\n    countryState,\r\n    functionDownloadImg,\r\n    successSelectFile,\r\n    fileImg,\r\n    firstName,\r\n    secondName,\r\n    age,\r\n    country,\r\n}) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.anketa}>\r\n                <form onSubmit={submitHandler} className=\"pb-5\">\r\n                    {alert && <Alert text={alert} />}\r\n\r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\">\r\n                            <div className=\"row\">\r\n                                <InputFirstName\r\n                                    value={firstNameState}\r\n                                    onChange={changeInputHandler}\r\n                                />\r\n                                <InputSecondName\r\n                                    value={secondNameState}\r\n                                    onChange={changeInputHandler}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\">\r\n                            <div className=\"row\">\r\n                                <InputAge\r\n                                    value={ageState}\r\n                                    onChange={changeInputHandler}\r\n                                />\r\n                                <InputCountry\r\n                                    value={countryState}\r\n                                    onChange={changeInputHandler}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <InputDownloadImg\r\n                        title=\"Аватарка\"\r\n                        onChange={functionDownloadImg}\r\n                        successSelectFile={successSelectFile}\r\n                    />\r\n\r\n                    <div className={s.button}>\r\n                        <button className=\"btn btn-warning mr-4\" type=\"submit\">\r\n                            Обновить\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div className={s.result}>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m7\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-image mx-auto d-block pt-3\">\r\n                                {fileImg ? (\r\n                                    <div className={s.ava}>\r\n                                        <img src={fileImg} alt=\"аватарка\" />\r\n                                    </div>\r\n                                ) : (\r\n                                    <img\r\n                                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTMyJn14ZEFjpLLMuEXcoz-YmbrtUyTvS7kFw&usqp=CAU\"\r\n                                        alt=\"аватарка\"\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                {firstName && secondName && age && country ? (\r\n                                    <p>\r\n                                        {firstName} {secondName}, {age} лет,{\" \"}\r\n                                        {country}\r\n                                    </p>\r\n                                ) : (\r\n                                    <p>Иван Иванов, 120 лет, London</p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                                <NavLink to=\"/profile\">\r\n                                    Перейти в профиль\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { upgradeProfile, showAlert } from \"../../redux/actions\";\r\nimport { successDownloadImgHandler } from \"../../general/downloadImg/successDownloadImgHandler\";\r\nimport SettingsUI from \"./SettingsUI\";\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: \"\",\r\n            secondName: \"\",\r\n            age: \"\",\r\n            country: \"\",\r\n            successSelectFile: \"\",\r\n            fileImg: \"\",\r\n        };\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {\r\n            firstName,\r\n            secondName,\r\n            age,\r\n            country,\r\n            successSelectFile,\r\n            fileImg,\r\n        } = this.state;\r\n\r\n        if (\r\n            !firstName.trim() ||\r\n            !secondName.trim() ||\r\n            !successSelectFile.trim() ||\r\n            !age.trim() ||\r\n            !country.trim()\r\n        ) {\r\n            return this.props.showAlert(\"Все поля должны быть заполнены\");\r\n        }\r\n\r\n        const newDataUser = {\r\n            firstName,\r\n            secondName,\r\n            age,\r\n            country,\r\n            successSelectFile,\r\n            fileImg,\r\n        };\r\n\r\n        this.props.upgradeProfile(newDataUser);\r\n    };\r\n\r\n    changeInputHandler = (e) => {\r\n        e.persist();\r\n\r\n        this.setState((prev) => ({\r\n            ...prev,\r\n            ...{ [e.target.name]: e.target.value },\r\n        }));\r\n    };\r\n\r\n    functionDownloadImg = (e) => {\r\n        successDownloadImgHandler(e, (res) =>\r\n            this.setState((prev) => ({\r\n                ...prev,\r\n                ...res,\r\n            }))\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let firstName, secondName, age, country, fileImg;\r\n        let propsProfileData = this.props.profileData;\r\n\r\n        if (propsProfileData.length > 0) {\r\n            firstName = propsProfileData[0].firstName;\r\n            secondName = propsProfileData[0].secondName;\r\n            age = propsProfileData[0].age;\r\n            country = propsProfileData[0].country;\r\n            fileImg = propsProfileData[0].fileImg;\r\n        }\r\n\r\n        return (\r\n            <SettingsUI\r\n                alert={this.props.alert}\r\n                submitHandler={this.submitHandler}\r\n                firstNameState={this.state.firstName}\r\n                secondNameState={this.state.secondName}\r\n                changeInputHandler={this.changeInputHandler}\r\n                ageState={this.state.age}\r\n                countryState={this.state.country}\r\n                functionDownloadImg={this.functionDownloadImg}\r\n                successSelectFile={this.state.successSelectFile}\r\n                fileImg={fileImg}\r\n                firstName={firstName}\r\n                secondName={secondName}\r\n                age={age}\r\n                country={country}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    upgradeProfile,\r\n    showAlert,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alert: state.app.alert,\r\n    profileData: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","export function timer() {\r\n    const now = new Date();\r\n\r\n    const month = now.getMonth() + 1;\r\n    const day = now.getDate() < 10 ? `0${now.getDate()}` : now.getDate();\r\n    const hours = now.getHours();\r\n    const minutes =\r\n        now.getMinutes() < 10 ? `0${now.getMinutes()}` : now.getMinutes();\r\n\r\n    return \"Создано \" + day + \".0\" + month + \" в \" + hours + \":\" + minutes;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default ({ icon, name, label, value, onChange }) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col s12\">\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                        <i className=\"material-icons prefix\">{icon}</i>\r\n                        <textarea\r\n                            id={name}\r\n                            className=\"materialize-textarea\"\r\n                            name={name}\r\n                            onChange={onChange}\r\n                            value={value}\r\n                        ></textarea>\r\n                        <label htmlFor={name}>{label}</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost, showAlert } from \"../../redux/actions\";\r\nimport { Alert } from \"../Alert\";\r\nimport { timer } from \"../time\";\r\nimport InputDownloadImg from \"../../general/downloadImg/InputDownloadImg\";\r\nimport { successDownloadImgHandler } from \"../../general/downloadImg/successDownloadImgHandler\";\r\nimport s from \"./postform.module.css\";\r\nimport InputPost from \"./InputPost\";\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            messagePost: \"\",\r\n            successSelectFile: \"\",\r\n            fileImg: \"\",\r\n        };\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { title, messagePost, successSelectFile, fileImg } = this.state;\r\n\r\n        if (!title.trim() || !messagePost.trim() || !successSelectFile.trim()) {\r\n            return this.props.showAlert(\"Все поля должны быть заполнены\");\r\n        }\r\n\r\n        const newPost = {\r\n            title,\r\n            messagePost,\r\n            time: timer(),\r\n            successSelectFile,\r\n            fileImg,\r\n            id: Date.now().toString(),\r\n        };\r\n\r\n        this.props.createPost(newPost);\r\n        this.setState({ title: \"\", messagePost: \"\", successSelectFile: \"\" });\r\n    };\r\n\r\n    changeInputHandler = (e) => {\r\n        e.persist();\r\n        this.setState((prev) => ({\r\n            ...prev,\r\n            ...{ [e.target.name]: e.target.value },\r\n        }));\r\n    };\r\n\r\n    functionDownloadImg = (e) => {\r\n        successDownloadImgHandler(e, (res) =>\r\n            this.setState((prev) => ({\r\n                ...prev,\r\n                ...res,\r\n            }))\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let inputData = [\r\n            {\r\n                id: 0,\r\n                icon: \"mode_edit\",\r\n                name: \"title\",\r\n                label: \"Заголовок\",\r\n                value: this.state.title,\r\n            },\r\n            {\r\n                id: 1,\r\n                icon: \"keyboard\",\r\n                name: \"messagePost\",\r\n                label: \"Текст\",\r\n                value: this.state.messagePost,\r\n            },\r\n        ];\r\n\r\n        let inputElements = inputData.map((i) => (\r\n            <InputPost\r\n                icon={i.icon}\r\n                name={i.name}\r\n                label={i.label}\r\n                value={i.value}\r\n                onChange={this.changeInputHandler}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <form onSubmit={this.submitHandler}>\r\n                {this.props.alert && <Alert text={this.props.alert} />}\r\n\r\n                {inputElements}\r\n\r\n                <div className=\"pt-3\">\r\n                    <InputDownloadImg\r\n                        title=\"Картинка\"\r\n                        onChange={this.functionDownloadImg}\r\n                        successSelectFile={this.state.successSelectFile}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.button}>\r\n                    <button className=\"btn btn-success\" type=\"submit\">\r\n                        Создать\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createPost,\r\n    showAlert,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alert: state.app.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React from \"react\";\r\n\r\nexport default ({ post }) => {\r\n    return (\r\n        <div className=\"media\">\r\n            <div className=\"media-body\">\r\n                <h5 className=\"mt-0 mb-1\">{post.title}</h5>\r\n                <p className=\"card-text pt-3\">{post.messagePost}</p>\r\n                <p className=\"card-text\">\r\n                    <small className=\"text-muted\">{post.time}</small>\r\n                </p>\r\n            </div>\r\n            <img\r\n                src={post.fileImg}\r\n                alt=\"картинка к посту\"\r\n                style={{ width: 200, borderRadius: 5 }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Posts = ({ syncPosts }) => {\r\n    if (!syncPosts.length) {\r\n        return <p className=\"text-center\">Постов пока нет</p>;\r\n    }\r\n    return (\r\n        <div className=\"pl-5\">\r\n            {syncPosts.map((post) => (\r\n                <Post post={post} key={post.id} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        syncPosts: state.posts.posts,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Posts);\r\n","import React from \"react\";\r\nimport PostForm from \"../components/PostForm/PostForm\";\r\nimport Posts from \"../components/Posts\";\r\n\r\nconst PostMen = () => {\r\n    return (\r\n        <div className=\"container pt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <PostForm />\r\n                </div>\r\n            </div>\r\n            <div className=\"row pt-3\">\r\n                <div className=\"col\">\r\n                    <Posts />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostMen;\r\n","import React from \"react\";\r\nimport s from \"./profile.module.css\";\r\n\r\nexport default ({ icon, text }) => {\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.icon}>\r\n                <ul className=\"left hide-on-med-and-down\">\r\n                    <li>\r\n                        <i className=\"material-icons brown-text\">{icon}</i>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className={s.text}>{text}</div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./profile.module.css\";\r\nimport \"materialize-css\";\r\nimport PostMen from \"../PostMen\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    let firstName, secondName, age, country, fileImg;\r\n    let propsProfileData = props.profileData;\r\n\r\n    if (propsProfileData.length > 0) {\r\n        firstName = propsProfileData[0].firstName;\r\n        secondName = propsProfileData[0].secondName;\r\n        age = propsProfileData[0].age;\r\n        country = propsProfileData[0].country;\r\n        fileImg = propsProfileData[0].fileImg;\r\n    } else {\r\n        return (\r\n            <div className=\"container pt-5\">\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-header\">Внимание</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Профиль пуст</h5>\r\n                        <p className=\"card-text\">\r\n                            Лишь заполнив его, можно получить новые\r\n                            возможности...\r\n                        </p>\r\n\r\n                        <NavLink to=\"/settings\" className=\"btn btn-primary\">\r\n                            начать\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"card-footer text-muted\">Удачи!</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let infoData = [\r\n        { id: 0, icon: \"account_circle\", text: `${firstName} ${secondName}` },\r\n        { id: 1, icon: \"cake\", text: `${age} лет` },\r\n        { id: 2, icon: \"public\", text: `${country}` },\r\n    ];\r\n\r\n    let infoElements = infoData.map((i) => (\r\n        <ProfileInfo icon={i.icon} text={i.text} />\r\n    ));\r\n\r\n    return (\r\n        <div className=\"container pt-4\">\r\n            <img src={fileImg} className={s.ava} alt=\"аватарка\" />\r\n\r\n            <div className={s.posts}>\r\n                <PostMen />\r\n            </div>\r\n\r\n            <div className={s.info}>{infoElements}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profileData: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Profile);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./navbar.module.css\";\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <nav>\r\n            <div\r\n                className=\"nav-wrapper blue darken-1\"\r\n                style={{ padding: \"0 2rem\" }}\r\n            >\r\n                <span className=\"brand-logo\">ВСети</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li>\r\n                        <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n                            Настройки\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n                            Профиль\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/album\" activeClassName={s.activeLink}>\r\n                            Альбом\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/menu\" activeClassName={s.activeLink}>\r\n                            Меню\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/\">Выйти</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n","import React from \"react\";\nimport \"materialize-css\";\nimport { useRoutes } from \"./routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { NavBar } from \"./general/navbar/NavBar\";\n\nconst App = () => {\n    const routes = useRoutes(true);\n    const isAuthenticated = 1;\n    return (\n        <Router>\n            {isAuthenticated === 1 && <NavBar />}\n            {routes}\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Album from \"./pages/Album\";\r\nimport AuthPage from \"./pages/AuthPage\";\r\nimport Menu from \"./pages/Menu\";\r\nimport Settings from \"./pages/Settings/Settings\";\r\nimport Profile from \"./pages/ProfilePage/Profile\";\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/settings\" exact>\r\n                    <Settings />\r\n                </Route>\r\n                <Route path=\"/profile\" exact>\r\n                    <Profile />\r\n                </Route>\r\n                <Route path=\"/album\" exact>\r\n                    <Album />\r\n                </Route>\r\n                <Route path=\"/menu\" exact>\r\n                    <Menu />\r\n                </Route>\r\n\r\n                <Redirect to=\"/profile\" />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CREATE_POST, FETCH_POSTS } from \"../types\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    fetchedPosts: [],\r\n};\r\n\r\n//Pure Functions\r\nexport const postsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POST:\r\n            return { ...state, posts: state.posts.concat([action.payload]) };\r\n        case FETCH_POSTS:\r\n            return { ...state, fetchedPosts: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    SHOW_LOADER,\r\n    HIDE_LOADER,\r\n    SHOW_ALERT,\r\n    HIDE_ALERT,\r\n} from \"../../redux/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    alert: null,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return { ...state, loading: true };\r\n        case HIDE_LOADER:\r\n            return { ...state, loading: false };\r\n        case SHOW_ALERT:\r\n            return { ...state, alert: action.payload };\r\n        case HIDE_ALERT:\r\n            return { ...state, alert: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { UPGRADE_PROFILE } from \"../types\";\r\n\r\nconst initialState = {\r\n    profile: [],\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPGRADE_PROFILE:\r\n            return {\r\n                ...state,\r\n                // profile: state.profile.concat([action.payload]),\r\n                profile: [action.payload],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { postsReducer } from \"../reducers/postsReducer\";\r\nimport { appReducer } from \"../reducers/appReducer\";\r\nimport { profileReducer } from \"../reducers/profileReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    posts: postsReducer,\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n});\r\n","import { CREATE_POST } from \"./types\";\r\nimport { showAlert } from \"./actions\";\r\n\r\nconst forbidden = [\"fuck\", \"php\", \"lol\"];\r\n\r\nexport function forbiddenWordsMiddleware({ dispatch }) {\r\n    return function (next) {\r\n        return function (action) {\r\n            if (action.type === CREATE_POST) {\r\n                const found = forbidden.filter((w) =>\r\n                    action.payload.title.includes(w)\r\n                );\r\n                if (found.length) {\r\n                    return dispatch(showAlert(\"you is spamer\"));\r\n                }\r\n            }\r\n            return next(action);\r\n        };\r\n    };\r\n}\r\n","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { FETCH_POSTS, REQUEST_POSTS } from \"./types\";\r\nimport { showLoader, hideLoader, showAlert } from \"./actions\";\r\n\r\nexport function* sagaWatcher() {\r\n    yield takeEvery(REQUEST_POSTS, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n    try {\r\n        yield put(showLoader());\r\n        const payload = yield call(fetchPosts);\r\n        yield put({ type: FETCH_POSTS, payload });\r\n        yield put(hideLoader());\r\n    } catch (e) {\r\n        yield put(showAlert(\"Ошибка на сервере. Попробуйте ещё раз...\"));\r\n        yield put(hideLoader());\r\n    }\r\n}\r\n\r\nasync function fetchPosts() {\r\n    const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/posts?_limit=5\"\r\n    );\r\n    return await response.json();\r\n}\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./redux/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { forbiddenWordsMiddleware } from \"./redux/middleware\";\nimport { sagaWatcher } from \"./redux/sagas\";\nimport \"./index.css\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk, forbiddenWordsMiddleware, saga),\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nsaga.run(sagaWatcher);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nrender(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}